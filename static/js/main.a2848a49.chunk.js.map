{"version":3,"sources":["redux/actionTypes/shoppingListActionTypes.js","redux/actionTypes/currencyActionTypes.js","redux/actionTypes/innerWidthActionTypes.js","redux/actionTypes/themeActionTypes.js","redux/actions/shoppingListActions.js","redux/actions/currencyActions.js","styles/themes/dark.js","styles/themes/light.js","styles/styledComponents/globalStyledComponents.js","styles/styledComponents/styledButtons.js","styles/styledComponents/styledCardWrapper.js","styles/styledComponents/styledErrors.js","styles/styledComponents/styledList.js","styles/styledComponents/styledNavBar.js","helpers/functions.js","components/boughtItems/ItemList.js","components/boughtItems/StoreList.js","components/formIcons/ErrorButton.js","components/formIcons/ActionButton.js","components/boughtItems/AddItem.js","components/ErrorBoundary.js","components/boughtItems/Bought.js","components/receivedItems/ReceivedItemList.js","components/receivedItems/ReceivedStoreList.js","components/receivedItems/Received.js","components/NotFound.js","components/NavBar.js","redux/actions/themeActions.js","App.js","redux/actions/innerWidthActions.js","styles/theme.js","redux/reducers/shoppingListReducer.js","redux/reducers/currencyReducer.js","redux/reducers/themeReducer.js","redux/reducers/rootReducer.js","redux/reducers/innerWidthReducer.js","redux/store.js","index.js"],"names":["SET_LIST","TOGGLE_CURRENCY","REQUEST_CURRENCY_FAILURE","REQUEST_CURRENCY_SUCCESS","SET_INNER_WIDTH","SET_THEME","setList","list","type","payload","toggleCurrency","requestCurrencySuccess","dif","darkTheme","colors","backgroundBody","backgroundTable","background","main","font","tableFooter","lightTheme","GlobalStyle","createGlobalStyle","theme","GridDiv","styled","div","props","repeatFormula","searchInputProps","dark","color","backgroundColor","inputProps","searchInputLabelProps","StyledCurrencyButton","button","left","css","ReceivedButton","H1","h1","TitleWrapper","Wrapper","Center","APIErrorDiv","ErrorDiv","marginTop","StyledUl","ul","StyledSpan","span","weight","center","StyledDivForList","TableHeader","TableFooter","ListWrapper","StyledLink","Link","textDecoration","StyledToolBar","ToolBar","DrawerItem","StyledDrawer","capitalize","s","charAt","toUpperCase","slice","formatToIsraeliDate","date","baseDate","Date","getDate","toString","padStart","getMonth","getFullYear","generateBrs","num","arrOfSpaces","i","push","getStoresObj","shoppingList","received","storesArr","filter","item","map","store","storedObj","forEach","toLowerCase","ItemList","dispatch","useDispatch","useSelector","state","currency","innerWidth","useState","filterInput","setFilterInput","filteredList","setFilteredList","useEffect","getPrice","priceInUSD","current","Math","round","filteredListPriceSum","useMemo","reduce","acc","TextField","id","variant","style","value","label","onChange","e","input","target","foundItems","boughtItems","found","arrOfItemsValues","name","includes","InputLabelProps","InputProps","error","length","width","height","sort","a","b","deliveryDate","className","Tooltip","title","onClick","selectedItem","find","Swal","fire","icon","showCancelButton","confirmButtonText","cancelButtonText","then","result","receivedDate","now","receiveItem","StoreList","stores","Object","keys","split","join","ErrorButton","tooltipTitle","IconButton","cursor","ActionButton","AddItem","classes","makeStyles","muiTheme","createStyles","root","textAlign","paper","position","maxWidth","minWidth","borderRadius","boxShadow","shadows","padding","spacing","outline","useStyles","modalStyle","top","transform","open","setOpen","useForm","register","handleSubmit","errors","empty","handleClose","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","onClose","Fade","direction","in","onSubmit","data","valueOf","Number","uuidv4","inputRef","required","endAdornment","InputAdornment","message","pattern","FormControl","FormHelperText","Button","ErrorBoundary","hasError","this","children","React","Component","Bought","tab","setTab","marginRight","marginLeft","arrow","placement","ReceivedItemList","receivedItems","Received","ReceivedStoreList","NotFound","NavAppBar","AppBar","edge","aria-label","Menu","to","Typography","right","Switch","checked","setTheme","Drawer","anchor","App","fetchCurrency","useCallback","fetch","json","rates","ILS","window","addEventListener","currencyInterval","setInterval","clearInterval","currentTheme","getTheme","NavBar","exact","path","shoppingListState","currencyState","previousCurrency","localStorage","getItem","themeState","previousTheme","matchMedia","matches","rootReducer","combineReducers","action","setItem","createStore","reducer","applyMiddleware","ReduxThunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2848a49.chunk.js","sourcesContent":["export const SET_LIST = \"SET_LIST\";\r\n","export const TOGGLE_CURRENCY = \"TOGGLE_CURRENCY\";\r\nexport const REQUEST_CURRENCY_FAILURE = \"REQUEST_CURRENCY_FAILURE\";\r\nexport const REQUEST_CURRENCY_SUCCESS = \"REQUEST_CURRENCY_SUCCESS\";\r\n","export const SET_INNER_WIDTH = \"SET_INNER_WIDTH\";\r\n","export const SET_THEME = \"SET_THEME\";\r\n","import { SET_LIST } from \"../actionTypes\";\r\n\r\nexport const setList = (list) => {\r\n  return {\r\n    type: SET_LIST,\r\n    payload: list,\r\n  };\r\n};\r\n","import {\r\n  TOGGLE_CURRENCY,\r\n  REQUEST_CURRENCY_FAILURE,\r\n  REQUEST_CURRENCY_SUCCESS,\r\n} from \"../actionTypes\";\r\n\r\nexport const toggleCurrency = () => {\r\n  return {\r\n    type: TOGGLE_CURRENCY,\r\n  };\r\n};\r\n\r\nexport const requestCurrencySuccess = (dif) => {\r\n  return {\r\n    type: REQUEST_CURRENCY_SUCCESS,\r\n    payload: dif,\r\n  };\r\n};\r\n\r\nexport const requestCurrencyFailure = (error) => {\r\n  return {\r\n    type: REQUEST_CURRENCY_FAILURE,\r\n    payload: error,\r\n  };\r\n};\r\n","export const darkTheme = {\r\n  colors: {\r\n    backgroundBody: \"#111\",\r\n    backgroundTable: \"#111\",\r\n    background: \"#2A2A2A\",\r\n    main: \"#3C4479\",\r\n    font: \"white\",\r\n    tableFooter: \"#222\",\r\n  },\r\n};\r\n","export const lightTheme = {\r\n  colors: {\r\n    backgroundBody: \"white\",\r\n    backgroundTable: \"rgba(180, 180, 180, 0.12)\",\r\n    background: \"#FFFFFF\",\r\n    main: \"#3f51b5\",\r\n    font: \"black\",\r\n    tableFooter: \"lightgrey\",\r\n  },\r\n};\r\n","import styled, { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background-color: ${({ theme }) => theme.colors.backgroundBody};\r\n  }\r\n`;\r\n\r\nexport const GridDiv = styled.div`\r\n  display: grid;\r\n  width: 95%;\r\n  grid-template-columns: ${(props) =>\r\n    props.repeatFormula ? props.repeatFormula : \"1fr 1fr\"};\r\n\r\n  @media (max-width: 1000px) {\r\n    grid-template-columns: ${(props) =>\r\n      props.repeatFormula ? props.repeatFormula : \"1fr\"};\r\n  }\r\n`;\r\n\r\nexport const searchInputProps = {\r\n  dark: { color: \"#DFDFDF\", backgroundColor: \"#222\" },\r\n};\r\n\r\nexport const inputProps = {\r\n  dark: { color: \"#DFDFDF\" },\r\n};\r\n\r\nexport const searchInputLabelProps = {\r\n  dark: { color: \"#DFDFDF\" },\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledCurrencyButton = styled.button`\r\n  border-radius: 50%;\r\n  height: 50px;\r\n  width: 50px;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: 150ms;\r\n  position: absolute;\r\n  top: 20px;\r\n\r\n  color: white;\r\n  background-color: ${({ theme }) => theme.colors.main};\r\n  outline: none;\r\n  border: solid ${({ theme }) => theme.colors.main} 3px;\r\n  box-shadow: 5px 4px 20px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1) inset;\r\n\r\n  ${(props) =>\r\n    props.left\r\n      ? css`\r\n          left: 20px;\r\n          @media (max-width: 768px) {\r\n            left: 10px;\r\n          }\r\n        `\r\n      : css`\r\n          right: 20px;\r\n          @media (max-width: 768px) {\r\n            right: 10px;\r\n          }\r\n        `}\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.main};\r\n    box-shadow: 3px 2px 20px rgba(0, 0, 0, 0.5),\r\n      0 0 40px rgba(0, 0, 0, 0.1) inset;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    top: 10px;\r\n    height: 40px;\r\n    width: 40px;\r\n    font-size: 17px;\r\n  }\r\n`;\r\n\r\nexport const ReceivedButton = styled.button`\r\n  border-radius: 50%;\r\n  height: 40px;\r\n  width: 40px;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: 150ms;\r\n  color: white;\r\n  background-color: ${({ theme }) => theme.colors.main};\r\n  outline: none;\r\n  border: solid ${({ theme }) => theme.colors.main} 3px;\r\n  box-shadow: 5px 4px 20px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1) inset;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.main};\r\n    box-shadow: 3px 2px 20px rgba(0, 0, 0, 0.5),\r\n      0 0 40px rgba(0, 0, 0, 0.1) inset;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    height: 30px;\r\n    width: 30px;\r\n    font-size: 15px;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const H1 = styled.h1`\r\n  padding: 10px 20px;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-size: 27px;\r\n  color: white;\r\n  margin: 0;\r\n  display: inline;\r\n  background-color: ${({ theme }) => theme.colors.main};\r\n  border-radius: 5px;\r\n  min-width: 180px;\r\n  box-shadow: 5px 4px 20px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1) inset;\r\n  z-index: 2;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 22px;\r\n  }\r\n`;\r\n\r\nexport const TitleWrapper = styled.div`\r\n  height: 0px;\r\n  transform: translateY(-60px);\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  margin: 60px auto;\r\n  width: 80%;\r\n  padding: 40px;\r\n  border-radius: 7px;\r\n  box-shadow: 5px 4px 20px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1) inset;\r\n  min-width: 300px;\r\n  max-width: 1000px;\r\n  background-color: white;\r\n  color: \"black\";\r\n  position: relative;\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 40px 10px 10px 10px;\r\n    width: 95%;\r\n  }\r\n`;\r\n\r\nexport const Center = styled.div`\r\n  text-align: center;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const APIErrorDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  padding: 10px;\r\n  margin: 0 auto;\r\n  border-radius: 5px;\r\n  width: 50%;\r\n  max-width: 300px;\r\n  background-color: rgba(255, 0, 0, 0.493);\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n`;\r\n\r\nexport const ErrorDiv = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  justify-items: center;\r\n  align-content: center;\r\n  ${(props) =>\r\n    props.marginTop &&\r\n    css`\r\n      margin-top: 30vh;\r\n    `}\r\n  color: ${({ theme }) => theme.colors.font};\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledUl = styled.ul`\r\n  list-style-type: none;\r\n  padding: 0;\r\n`;\r\n\r\nexport const StyledSpan = styled.span`\r\n  font-weight: ${(props) => props.weight === \"bold\" && \"bold\"};\r\n  text-align: ${(props) => props.center && \"center\"};\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nexport const StyledDivForList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: ${(props) =>\r\n    props.repeatFormula\r\n      ? props.repeatFormula\r\n      : \"0.5fr 2fr 1fr 1fr 1.5fr 0.5fr\"};\r\n  padding: 10px;\r\n  align-items: center;\r\n  background-color: ${({ theme }) => theme.colors.backgroundTable};\r\n  transition: 150ms;\r\n  border-radius: 2px;\r\n  margin: 2px;\r\n  column-gap: 5px;\r\n  color: ${({ theme }) => theme.colors.font};\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: ${(props) =>\r\n      props.repeatFormula ? props.repeatFormula : \"2fr 1fr 1fr 1.5fr 0.5fr\"};\r\n  }\r\n`;\r\n\r\nexport const TableHeader = styled(StyledDivForList)`\r\n  background-color: ${({ theme }) => theme.colors.main};\r\n  color: white;\r\n`;\r\n\r\nexport const TableFooter = styled(StyledDivForList)`\r\n  background-color: ${({ theme }) => theme.colors.tableFooter};\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 3fr 3fr;\r\n  }\r\n`;\r\n\r\nexport const ListWrapper = styled.div`\r\n  width: 50%;\r\n  min-width: 300px;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ToolBar from \"@material-ui/core/ToolBar\";\r\n\r\nexport const StyledLink = styled(Link)`\r\n  color: ${(props) => (props.color ? props.color : \"white\")};\r\n  text-decoration: ${(props) => (props.textDecoration ? \"underline\" : \"none\")};\r\n`;\r\n\r\nexport const StyledToolBar = styled(ToolBar)`\r\n  background-color: ${({ theme }) => theme.colors.main};\r\n`;\r\n\r\nexport const DrawerItem = styled.div`\r\n  padding: 25px;\r\n  color: white;\r\n  width: 100%;\r\n  height: 1.5em;\r\n  transition: 100ms;\r\n\r\n  &:hover {\r\n    color: #3f51b5;\r\n    background-color: white;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const StyledDrawer = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.main};\r\n  height: 100%;\r\n  width: 220px;\r\n  overflow: hidden;\r\n`;\r\n","export const capitalize = (s) => {\r\n  if (s) {\r\n    return s.charAt(0).toUpperCase() + s.slice(1);\r\n  }\r\n};\r\n\r\nexport const formatToIsraeliDate = (date) => {\r\n  const baseDate = new Date(date);\r\n  return `${baseDate.getDate().toString().padStart(2, \"0\")}/${(\r\n    baseDate.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}/${baseDate.getFullYear()}`;\r\n};\r\n\r\nexport const generateBrs = (num) => {\r\n  const arrOfSpaces = [];\r\n  for (let i = 0; i < num; i++) {\r\n    arrOfSpaces.push(<br />);\r\n  }\r\n  return arrOfSpaces;\r\n};\r\n\r\nexport const getStoresObj = (shoppingList, received = false) => {\r\n  const storesArr = shoppingList\r\n    .filter((item) => (received ? item.received : !item.received))\r\n    .map((item) => item.store);\r\n  const storedObj = {};\r\n  storesArr.forEach((store) => {\r\n    storedObj[store.toLowerCase()] = storedObj[store.toLowerCase()]\r\n      ? storedObj[store.toLowerCase()] + 1\r\n      : 1;\r\n  });\r\n  return storedObj;\r\n};\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setList } from \"../../redux/actions\";\r\nimport { capitalize, formatToIsraeliDate } from \"../../helpers\";\r\nimport {\r\n  TableHeader,\r\n  StyledUl,\r\n  StyledSpan,\r\n  StyledDivForList,\r\n  APIErrorDiv,\r\n  ReceivedButton,\r\n  Center,\r\n  searchInputProps,\r\n  searchInputLabelProps,\r\n  TableFooter,\r\n} from \"../../styles\";\r\nimport { Tooltip, TextField } from \"@material-ui/core\";\r\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\r\nimport ErrorOutlinedIcon from \"@material-ui/icons/ErrorOutlined\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nfunction ItemList() {\r\n  const dispatch = useDispatch();\r\n  const { shoppingList, currency, innerWidth, theme } = useSelector(\r\n    (state) => state\r\n  );\r\n  const [filterInput, setFilterInput] = useState(\"\");\r\n  const [filteredList, setFilteredList] = useState(\r\n    shoppingList.filter((item) => !item.received)\r\n  );\r\n  const handleFilter = (e) => {\r\n    const input = e.target.value;\r\n    setFilterInput(input);\r\n\r\n    const foundItems = [];\r\n    const boughtItems = shoppingList.filter((item) => !item.received);\r\n    for (let item of boughtItems) {\r\n      let found = false;\r\n      const arrOfItemsValues = [item.name, item.store];\r\n      for (let value of arrOfItemsValues) {\r\n        if (\r\n          typeof value === \"string\" &&\r\n          value.toLowerCase().includes(input.toLowerCase())\r\n        ) {\r\n          found = true;\r\n        }\r\n      }\r\n      if (found) {\r\n        foundItems.push(item);\r\n      }\r\n    }\r\n    setFilteredList(foundItems);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFilteredList(shoppingList.filter((item) => !item.received));\r\n    setFilterInput(\"\");\r\n  }, [shoppingList]);\r\n\r\n  const receiveItem = (id) => {\r\n    const selectedItem = shoppingList.find((item) => item.id === id);\r\n    Swal.fire({\r\n      title: `Set ${selectedItem.name} As Received?`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Yes\",\r\n      cancelButtonText: \"No\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        const list = shoppingList.map((item) => {\r\n          if (item.id === id) {\r\n            item.received = true;\r\n            item.receivedDate = Date.now();\r\n          }\r\n          return item;\r\n        });\r\n        dispatch(setList(list));\r\n      }\r\n    });\r\n  };\r\n\r\n  const getPrice = (priceInUSD) => {\r\n    return currency.current === \"USD\"\r\n      ? priceInUSD\r\n      : Math.round(priceInUSD * currency.dif);\r\n  };\r\n\r\n  const filteredListPriceSum = useMemo(() => {\r\n    return filteredList.reduce((acc, item) => acc + item.priceInUSD, 0);\r\n  }, [filteredList]);\r\n\r\n  return (\r\n    <>\r\n      <Center>\r\n        <TextField\r\n          id=\"searchBar\"\r\n          variant=\"outlined\"\r\n          style={{ color: \"blue\" }}\r\n          value={filterInput}\r\n          label=\"Search\"\r\n          onChange={handleFilter}\r\n          InputLabelProps={{\r\n            style: searchInputLabelProps[theme],\r\n          }}\r\n          InputProps={{\r\n            style: searchInputProps[theme],\r\n          }}\r\n        />\r\n      </Center>\r\n      {currency.error.length > 0 && (\r\n        <>\r\n          <br />\r\n          <APIErrorDiv>\r\n            <ErrorOutlinedIcon style={{ width: \"23px\", height: \"23px\" }} />\r\n            &nbsp;\r\n            {currency.error}\r\n          </APIErrorDiv>\r\n        </>\r\n      )}\r\n      <br />\r\n      <StyledUl>\r\n        <li>\r\n          <TableHeader>\r\n            {innerWidth > 768 && <LocalMallIcon />}\r\n            <StyledSpan weight=\"bold\">Product</StyledSpan>\r\n            <StyledSpan weight=\"bold\">Store</StyledSpan>\r\n            <StyledSpan weight=\"bold\">Price</StyledSpan>\r\n            <StyledSpan center weight=\"bold\">\r\n              Expected Delivery Date\r\n            </StyledSpan>\r\n          </TableHeader>\r\n        </li>\r\n        {filteredList\r\n          .sort((a, b) => a.deliveryDate - b.deliveryDate)\r\n          .map((item, i) => (\r\n            <li className=\"itemListItem\" key={item.id}>\r\n              <StyledDivForList>\r\n                {innerWidth > 768 && <LocalMallIcon />}\r\n                <StyledSpan weight=\"bold\">{capitalize(item.name)}</StyledSpan>\r\n                <StyledSpan>{capitalize(item.store)}</StyledSpan>\r\n                <StyledSpan>\r\n                  {getPrice(item.priceInUSD)}\r\n                  {currency.current === \"ILS\" ? \"₪\" : \"$\"}\r\n                </StyledSpan>\r\n                <StyledSpan center>\r\n                  {formatToIsraeliDate(item.deliveryDate)}\r\n                </StyledSpan>\r\n                <StyledSpan center>\r\n                  <Tooltip title=\"Check item as received\">\r\n                    <ReceivedButton\r\n                      id={`receiveButton${i}`}\r\n                      onClick={() => receiveItem(item.id)}\r\n                    >\r\n                      ✓\r\n                    </ReceivedButton>\r\n                  </Tooltip>\r\n                </StyledSpan>\r\n              </StyledDivForList>\r\n            </li>\r\n          ))}\r\n        <li>\r\n          <TableFooter repeatFormula=\"0.5fr 3fr 3fr\">\r\n            {innerWidth > 768 && <LocalMallIcon />}\r\n            <StyledSpan weight=\"bold\">\r\n              Amount of Products: {filteredList.length}\r\n            </StyledSpan>\r\n            <StyledSpan weight=\"bold\">\r\n              Sum of Prices: {getPrice(filteredListPriceSum)}\r\n              {currency.current === \"ILS\" ? \"₪\" : \"$\"}\r\n            </StyledSpan>\r\n          </TableFooter>\r\n        </li>\r\n      </StyledUl>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ItemList;\r\n","import React, { useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { capitalize, getStoresObj } from \"../../helpers\";\r\nimport {\r\n  TableHeader,\r\n  StyledUl,\r\n  StyledSpan,\r\n  StyledDivForList,\r\n  ListWrapper,\r\n} from \"../../styles\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\n\r\nconst StoreList = () => {\r\n  const { shoppingList } = useSelector((state) => state);\r\n  const stores = useMemo(() => {\r\n    return getStoresObj(shoppingList);\r\n  }, [shoppingList]);\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      <ListWrapper>\r\n        <StyledUl>\r\n          <li>\r\n            <TableHeader repeatFormula=\"1fr 3fr 2fr\">\r\n              <ShoppingCartIcon />\r\n              <StyledSpan weight=\"bold\">Store</StyledSpan>\r\n              <StyledSpan center weight=\"bold\">\r\n                Product Amount\r\n              </StyledSpan>\r\n            </TableHeader>\r\n          </li>\r\n          {Object.keys(stores).map((store) => (\r\n            <li key={store}>\r\n              <StyledDivForList\r\n                id={store.split(\" \").join(\"\")}\r\n                repeatFormula=\"1fr 3fr 2fr\"\r\n              >\r\n                <ShoppingCartIcon />\r\n                <StyledSpan weight=\"bold\">{capitalize(store)}</StyledSpan>\r\n                <StyledSpan center>{stores[store]}</StyledSpan>\r\n              </StyledDivForList>\r\n            </li>\r\n          ))}\r\n        </StyledUl>\r\n      </ListWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StoreList;\r\n","import React from \"react\";\r\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\r\nimport { IconButton, Tooltip } from \"@material-ui/core\";\r\n\r\nexport const ErrorButton = ({ tooltipTitle, id }) => (\r\n  <Tooltip title={tooltipTitle}>\r\n    <IconButton id={id} style={{ cursor: \"default\" }}>\r\n      <ErrorOutlineIcon\r\n        style={{ width: \"30px\", height: \"30px\" }}\r\n        color=\"error\"\r\n      />\r\n    </IconButton>\r\n  </Tooltip>\r\n);\r\n","import React from \"react\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nexport const ActionButton = () => (\r\n  <IconButton style={{ cursor: \"default\" }}>\r\n    <DoneIcon style={{ color: \"green\" }} />\r\n  </IconButton>\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setList } from \"../../redux/actions\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {\r\n  Modal,\r\n  Button,\r\n  TextField,\r\n  FormControl,\r\n  FormHelperText,\r\n  Backdrop,\r\n  Fade,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  StyledCurrencyButton,\r\n  GridDiv,\r\n  searchInputLabelProps,\r\n  inputProps,\r\n} from \"../../styles\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ErrorButton, ActionButton } from \"../formIcons\";\r\nimport { generateBrs } from \"../../helpers\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport StoreIcon from \"@material-ui/icons/Store\";\r\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\r\n\r\nfunction AddItem() {\r\n  const { shoppingList, innerWidth, theme } = useSelector((state) => state);\r\n  const useStyles = makeStyles((muiTheme) =>\r\n    createStyles({\r\n      root: {\r\n        width: \"100%\",\r\n        textAlign: \"center\",\r\n      },\r\n      paper: {\r\n        position: \"absolute\",\r\n        width: \"50%\",\r\n        maxWidth: 700,\r\n        minWidth: 300,\r\n        backgroundColor: theme.includes(\"dark\") ? \"#3A3A3A\" : \"white\",\r\n        borderRadius: 7,\r\n        color: theme.includes(\"dark\") ? \"white\" : \"black\",\r\n        boxShadow: muiTheme.shadows[5],\r\n        padding: muiTheme.spacing(2, 4, 3),\r\n        outline: \"none\",\r\n      },\r\n    })\r\n  );\r\n  const classes = useStyles();\r\n  const modalStyle = getModalStyle();\r\n  const [open, setOpen] = useState(false);\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const dispatch = useDispatch();\r\n  const empty = Object.keys(errors).length === 0;\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    data.deliveryDate = new Date(data.deliveryDate).valueOf();\r\n    data.received = false;\r\n    data.receivedDate = null;\r\n    data.priceInUSD = Number(data.priceInUSD);\r\n    data.id = uuidv4();\r\n    dispatch(setList([...shoppingList, data]));\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledCurrencyButton id=\"addItemButton\" left onClick={handleOpen}>\r\n        +\r\n      </StyledCurrencyButton>\r\n      <Modal\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 300,\r\n        }}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <Fade direction=\"up\" in={open}>\r\n          <div style={modalStyle} className={classes.paper}>\r\n            <div className={classes.root}>\r\n              <h2>Add Product</h2>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <GridDiv>\r\n                  <div>\r\n                    <TextField\r\n                      id=\"name\"\r\n                      label=\"Product Name\"\r\n                      inputRef={register({\r\n                        required: \"Product name is required\",\r\n                      })}\r\n                      name=\"name\"\r\n                      InputLabelProps={{\r\n                        style: searchInputLabelProps[theme],\r\n                      }}\r\n                      InputProps={{\r\n                        style: inputProps[theme],\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"end\">\r\n                            <AddIcon style={{ color: \"black\" }} />\r\n                          </InputAdornment>\r\n                        ),\r\n                      }}\r\n                    />\r\n                    {!empty &&\r\n                      (errors.name ? (\r\n                        <ErrorButton\r\n                          id=\"nameError\"\r\n                          tooltipTitle={errors.name.message}\r\n                        />\r\n                      ) : (\r\n                        <ActionButton />\r\n                      ))}\r\n                    {generateBrs(2)}\r\n                    <TextField\r\n                      id=\"store\"\r\n                      label=\"Store\"\r\n                      inputRef={register({\r\n                        required: \"Store is required\",\r\n                      })}\r\n                      name=\"store\"\r\n                      InputLabelProps={{\r\n                        style: searchInputLabelProps[theme],\r\n                      }}\r\n                      InputProps={{\r\n                        style: inputProps[theme],\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"end\">\r\n                            <StoreIcon style={{ color: \"black\" }} />\r\n                          </InputAdornment>\r\n                        ),\r\n                      }}\r\n                    />\r\n                    {!empty &&\r\n                      (errors.store ? (\r\n                        <ErrorButton\r\n                          id=\"storeError\"\r\n                          tooltipTitle={errors.store.message}\r\n                        />\r\n                      ) : (\r\n                        <ActionButton />\r\n                      ))}\r\n                  </div>\r\n                  {innerWidth < 1000 && <br />}\r\n                  <div>\r\n                    <TextField\r\n                      id=\"priceInUSD\"\r\n                      label=\"Price In USD\"\r\n                      inputRef={register({\r\n                        pattern: {\r\n                          value: /^[+-]?\\d+(\\.\\d+)?$/,\r\n                          message: \"Please enter a valid price\",\r\n                        },\r\n                        required: \"Price is required\",\r\n                      })}\r\n                      name=\"priceInUSD\"\r\n                      InputLabelProps={{\r\n                        style: searchInputLabelProps[theme],\r\n                      }}\r\n                      InputProps={{\r\n                        style: inputProps[theme],\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"end\">\r\n                            <AttachMoneyIcon style={{ color: \"black\" }} />\r\n                          </InputAdornment>\r\n                        ),\r\n                      }}\r\n                    />\r\n                    {!empty &&\r\n                      (errors.priceInUSD ? (\r\n                        <ErrorButton\r\n                          id=\"priceError\"\r\n                          tooltipTitle={errors.priceInUSD.message}\r\n                        />\r\n                      ) : (\r\n                        <ActionButton />\r\n                      ))}\r\n                    {generateBrs(2)}\r\n                    <FormControl>\r\n                      <FormHelperText\r\n                        style={{ color: theme.includes(\"dark\") && \"#DFDFDF\" }}\r\n                      >\r\n                        Estimated Delivery Date\r\n                      </FormHelperText>\r\n                      <TextField\r\n                        type=\"date\"\r\n                        id=\"deliveryDate\"\r\n                        name=\"deliveryDate\"\r\n                        inputRef={register({\r\n                          required: \"Delivery Date is required\",\r\n                        })}\r\n                        style={{ width: \"225px\" }}\r\n                        InputLabelProps={{\r\n                          style: searchInputLabelProps[theme],\r\n                        }}\r\n                        InputProps={{\r\n                          style: inputProps[theme],\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                    {!empty &&\r\n                      (errors.deliveryDate ? (\r\n                        <ErrorButton\r\n                          id=\"deliveryDateError\"\r\n                          tooltipTitle={errors.deliveryDate.message}\r\n                        />\r\n                      ) : (\r\n                        <ActionButton />\r\n                      ))}\r\n                  </div>\r\n                </GridDiv>\r\n                {generateBrs(2)}\r\n                <Button\r\n                  id=\"submitButton\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                >\r\n                  Add\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddItem;\r\n\r\nfunction getModalStyle() {\r\n  return {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { ErrorDiv } from \"../styles\";\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false, error: \"\" };\r\n  }\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true, error: error.toString() };\r\n  }\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <ErrorDiv>\r\n          <h1>Oops! An Error Occurred!</h1>\r\n        </ErrorDiv>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toggleCurrency } from \"../../redux/actions\";\r\nimport {\r\n  Wrapper,\r\n  TitleWrapper,\r\n  H1,\r\n  Center,\r\n  StyledCurrencyButton,\r\n} from \"../../styles\";\r\nimport { Button, Tooltip } from \"@material-ui/core\";\r\nimport ItemList from \"./ItemList\";\r\nimport StoreList from \"./StoreList\";\r\nimport AddItem from \"./AddItem\";\r\nimport ErrorBoundary from \"../ErrorBoundary\";\r\n\r\nfunction Bought() {\r\n  const [tab, setTab] = useState(\"items\");\r\n  const dispatch = useDispatch();\r\n  const { currency } = useSelector((state) => state);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Center>\r\n        <TitleWrapper>\r\n          <H1>Bought Items</H1>\r\n        </TitleWrapper>\r\n        <br />\r\n        <Button\r\n          id=\"itemsButton\"\r\n          style={{ marginRight: 5 }}\r\n          variant=\"contained\"\r\n          color={tab === \"items\" ? \"primary\" : \"default\"}\r\n          onClick={() => setTab(\"items\")}\r\n        >\r\n          Item List\r\n        </Button>\r\n        <Button\r\n          id=\"storesButton\"\r\n          style={{ marginLeft: 5 }}\r\n          color={tab === \"stores\" ? \"primary\" : \"default\"}\r\n          variant=\"contained\"\r\n          onClick={() => setTab(\"stores\")}\r\n        >\r\n          Store List\r\n        </Button>\r\n      </Center>\r\n      {tab === \"items\" && (\r\n        <Tooltip arrow placement=\"top\" title=\"Change Currency\">\r\n          <StyledCurrencyButton onClick={() => dispatch(toggleCurrency())}>\r\n            {currency.current === \"ILS\" ? \"₪\" : \"$\"}\r\n          </StyledCurrencyButton>\r\n        </Tooltip>\r\n      )}\r\n      <br />\r\n      <AddItem />\r\n      {tab === \"items\" ? (\r\n        <ErrorBoundary>\r\n          <ItemList />\r\n        </ErrorBoundary>\r\n      ) : (\r\n        <ErrorBoundary>\r\n          <StoreList />\r\n        </ErrorBoundary>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Bought;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { capitalize, formatToIsraeliDate } from \"../../helpers\";\r\nimport {\r\n  TableHeader,\r\n  StyledUl,\r\n  StyledSpan,\r\n  StyledDivForList,\r\n  APIErrorDiv,\r\n  Center,\r\n  searchInputProps,\r\n  searchInputLabelProps,\r\n  TableFooter,\r\n} from \"../../styles\";\r\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\r\nimport ErrorOutlinedIcon from \"@material-ui/icons/ErrorOutlined\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nfunction ReceivedItemList() {\r\n  const { shoppingList, currency, innerWidth, theme } = useSelector(\r\n    (state) => state\r\n  );\r\n  const [filterInput, setFilterInput] = useState(\"\");\r\n  const [filteredList, setFilteredList] = useState(\r\n    shoppingList.filter((item) => item.received)\r\n  );\r\n\r\n  const handleFilter = (e) => {\r\n    const input = e.target.value;\r\n    setFilterInput(input);\r\n\r\n    const foundItems = [];\r\n    const receivedItems = shoppingList.filter((item) => item.received);\r\n    for (let item of receivedItems) {\r\n      let found = false;\r\n      const arrOfItemsValues = [item.name, item.store];\r\n      for (let value of arrOfItemsValues) {\r\n        if (\r\n          typeof value === \"string\" &&\r\n          value.toLowerCase().includes(input.toLowerCase())\r\n        ) {\r\n          found = true;\r\n        }\r\n      }\r\n      if (found) {\r\n        foundItems.push(item);\r\n      }\r\n    }\r\n    setFilteredList(foundItems);\r\n  };\r\n\r\n  const getPrice = (priceInUSD) => {\r\n    return currency.current === \"USD\"\r\n      ? priceInUSD\r\n      : Math.round(priceInUSD * currency.dif);\r\n  };\r\n\r\n  const filteredListPriceSum = useMemo(() => {\r\n    return filteredList.reduce((acc, item) => acc + item.priceInUSD, 0);\r\n  }, [filteredList]);\r\n\r\n  return (\r\n    <>\r\n      <Center>\r\n        <TextField\r\n          id=\"searchBar\"\r\n          variant=\"outlined\"\r\n          value={filterInput}\r\n          label=\"Search\"\r\n          onChange={handleFilter}\r\n          InputLabelProps={{\r\n            style: searchInputLabelProps[theme],\r\n          }}\r\n          InputProps={{\r\n            style: searchInputProps[theme],\r\n          }}\r\n        />\r\n      </Center>\r\n      {currency.error.length > 0 && (\r\n        <>\r\n          <br />\r\n          <APIErrorDiv>\r\n            <ErrorOutlinedIcon style={{ width: \"23px\", height: \"23px\" }} />\r\n            &nbsp;\r\n            {currency.error}\r\n          </APIErrorDiv>\r\n        </>\r\n      )}\r\n      <br />\r\n      <StyledUl>\r\n        <li>\r\n          <TableHeader\r\n            repeatFormula={\r\n              innerWidth > 550\r\n                ? \"0.5fr 1.5fr 1fr 1fr 1.5fr\"\r\n                : \"1.5fr 1fr 1fr 1.5fr\"\r\n            }\r\n          >\r\n            {innerWidth > 550 && <LocalMallIcon />}\r\n            <StyledSpan weight=\"bold\">Product</StyledSpan>\r\n            <StyledSpan weight=\"bold\">Store</StyledSpan>\r\n            <StyledSpan weight=\"bold\">Price</StyledSpan>\r\n            <StyledSpan center weight=\"bold\">\r\n              Received Date\r\n            </StyledSpan>\r\n          </TableHeader>\r\n        </li>\r\n        {filteredList\r\n\r\n          .sort((a, b) => a.receivedDate - b.receivedDate)\r\n          .map((item) => (\r\n            <li className=\"receivedListItem\" key={item.id}>\r\n              <StyledDivForList\r\n                repeatFormula={\r\n                  innerWidth > 550\r\n                    ? \"0.5fr 1.5fr 1fr 1fr 1.5fr\"\r\n                    : \"1.5fr 1fr 1fr 1.5fr\"\r\n                }\r\n              >\r\n                {innerWidth > 550 && <LocalMallIcon />}\r\n                <StyledSpan weight=\"bold\">{capitalize(item.name)}</StyledSpan>\r\n                <StyledSpan>{capitalize(item.store)}</StyledSpan>\r\n                <StyledSpan>\r\n                  {getPrice(item.priceInUSD)}\r\n                  {currency.current === \"ILS\" ? \"₪\" : \"$\"}\r\n                </StyledSpan>\r\n                <StyledSpan center>\r\n                  {formatToIsraeliDate(item.receivedDate)}\r\n                </StyledSpan>\r\n              </StyledDivForList>\r\n            </li>\r\n          ))}\r\n        <li>\r\n          <TableFooter repeatFormula=\"0.5fr 3fr 3fr\">\r\n            {innerWidth > 768 && <LocalMallIcon />}\r\n            <StyledSpan weight=\"bold\">\r\n              Amount of Products: {filteredList.length}\r\n            </StyledSpan>\r\n            <StyledSpan weight=\"bold\">\r\n              Sum of Prices: {getPrice(filteredListPriceSum)}\r\n              {currency.current === \"ILS\" ? \"₪\" : \"$\"}\r\n            </StyledSpan>\r\n          </TableFooter>\r\n        </li>\r\n      </StyledUl>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ReceivedItemList;\r\n","import React, { useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { capitalize, getStoresObj } from \"../../helpers\";\r\nimport {\r\n  TableHeader,\r\n  StyledUl,\r\n  StyledSpan,\r\n  StyledDivForList,\r\n  ListWrapper,\r\n} from \"../../styles\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\n\r\nconst StoreList = () => {\r\n  const { shoppingList } = useSelector((state) => state);\r\n  const stores = useMemo(() => {\r\n    return getStoresObj(shoppingList, true);\r\n  }, [shoppingList]);\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      <ListWrapper>\r\n        <StyledUl>\r\n          <li>\r\n            <TableHeader repeatFormula=\"1fr 3fr 2fr\">\r\n              <ShoppingCartIcon />\r\n              <StyledSpan weight=\"bold\">Store</StyledSpan>\r\n              <StyledSpan center weight=\"bold\">\r\n                Product Amount\r\n              </StyledSpan>\r\n            </TableHeader>\r\n          </li>\r\n          {Object.keys(stores).map((store) => (\r\n            <li id={store.split(\" \").join(\"\")} key={store}>\r\n              <StyledDivForList repeatFormula=\"1fr 3fr 2fr\">\r\n                <ShoppingCartIcon />\r\n                <StyledSpan weight=\"bold\">{capitalize(store)}</StyledSpan>\r\n                <StyledSpan center>{stores[store]}</StyledSpan>\r\n              </StyledDivForList>\r\n            </li>\r\n          ))}\r\n        </StyledUl>\r\n      </ListWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StoreList;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toggleCurrency } from \"../../redux/actions\";\r\nimport {\r\n  Wrapper,\r\n  TitleWrapper,\r\n  H1,\r\n  Center,\r\n  StyledCurrencyButton,\r\n} from \"../../styles\";\r\nimport { Tooltip, Button } from \"@material-ui/core\";\r\nimport ReceivedItemList from \"./ReceivedItemList\";\r\nimport ReceivedStoreList from \"./ReceivedStoreList\";\r\nimport ErrorBoundary from \"../ErrorBoundary\";\r\n\r\nfunction Received() {\r\n  const [tab, setTab] = useState(\"items\");\r\n  const dispatch = useDispatch();\r\n  const { currency } = useSelector((state) => state);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Center>\r\n        <TitleWrapper>\r\n          <H1>Received Items</H1>\r\n        </TitleWrapper>\r\n        <br />\r\n        <Button\r\n          id=\"itemsButton\"\r\n          style={{ marginRight: 5 }}\r\n          variant=\"contained\"\r\n          color={tab === \"items\" ? \"primary\" : \"default\"}\r\n          onClick={() => setTab(\"items\")}\r\n        >\r\n          Item List\r\n        </Button>\r\n        <Button\r\n          id=\"storesButton\"\r\n          style={{ marginLeft: 5 }}\r\n          color={tab === \"stores\" ? \"primary\" : \"default\"}\r\n          variant=\"contained\"\r\n          onClick={() => setTab(\"stores\")}\r\n        >\r\n          Store List\r\n        </Button>\r\n      </Center>\r\n      {tab === \"items\" && (\r\n        <Tooltip arrow placement=\"top\" title=\"Change Currency\">\r\n          <StyledCurrencyButton onClick={() => dispatch(toggleCurrency())}>\r\n            {currency.current === \"ILS\" ? \"₪\" : \"$\"}\r\n          </StyledCurrencyButton>\r\n        </Tooltip>\r\n      )}\r\n      <br />\r\n      {tab === \"items\" ? (\r\n        <ErrorBoundary>\r\n          <ReceivedItemList />\r\n        </ErrorBoundary>\r\n      ) : (\r\n        <ErrorBoundary>\r\n          <ReceivedStoreList />\r\n        </ErrorBoundary>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Received;\r\n","import React from \"react\";\r\nimport { ErrorDiv } from \"../styles\";\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <ErrorDiv id=\"notFound\" marginTop>\r\n      <h1>404 Not Found :(</h1>\r\n      <p>\r\n        The requested resource could not be found but may be available again in\r\n        the future.\r\n      </p>\r\n    </ErrorDiv>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  AppBar,\r\n  IconButton,\r\n  Typography,\r\n  Drawer,\r\n  Switch,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport { Menu } from \"@material-ui/icons\";\r\nimport { setTheme } from \"../redux/actions\";\r\nimport { StyledLink, StyledToolBar, StyledDrawer, DrawerItem } from \"../styles\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\n\r\nfunction NavAppBar() {\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(false);\r\n  const { innerWidth, theme } = useSelector((state) => state);\r\n\r\n  const handleDrawer = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\">\r\n        <StyledToolBar>\r\n          <IconButton\r\n            onClick={handleDrawer}\r\n            color=\"inherit\"\r\n            edge=\"start\"\r\n            aria-label=\"menu\"\r\n            id=\"openMenu\"\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n          <StyledLink to=\"/list\">\r\n            <Typography\r\n              style={{ marginLeft: innerWidth > 470 ? 30 : 0 }}\r\n              variant={innerWidth > 470 ? \"h4\" : innerWidth > 350 ? \"h5\" : \"h6\"}\r\n            >\r\n              {innerWidth > 470 && <ShoppingCartIcon />}\r\n              &nbsp; Shopping Tracker\r\n            </Typography>\r\n          </StyledLink>\r\n          <Typography style={{ position: \"absolute\", right: 10, top: 15 }}>\r\n            <Tooltip title=\"Change Theme\">\r\n              <Switch\r\n                checked={theme === \"dark\"}\r\n                onChange={() =>\r\n                  dispatch(setTheme(theme === \"dark\" ? \"light\" : \"dark\"))\r\n                }\r\n                name=\"checkedA\"\r\n              />\r\n            </Tooltip>\r\n          </Typography>\r\n        </StyledToolBar>\r\n      </AppBar>\r\n      <Drawer\r\n        anchor=\"left\"\r\n        open={open}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n      >\r\n        <StyledDrawer>\r\n          <StyledLink to=\"/list\">\r\n            <DrawerItem id=\"boughtItems\" onClick={() => setOpen(false)}>\r\n              Bought Items\r\n              <ShoppingCartIcon style={{ position: \"absolute\", right: 10 }} />\r\n            </DrawerItem>\r\n          </StyledLink>\r\n          <StyledLink to=\"/received\">\r\n            <DrawerItem id=\"receivedItems\" onClick={() => setOpen(false)}>\r\n              Received Items\r\n              <ShoppingCartIcon style={{ position: \"absolute\", right: 10 }} />\r\n            </DrawerItem>\r\n          </StyledLink>\r\n        </StyledDrawer>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavAppBar;\r\n","import { SET_THEME } from \"../actionTypes\";\r\n\r\nexport const setTheme = (theme) => {\r\n  return {\r\n    type: SET_THEME,\r\n    payload: theme,\r\n  };\r\n};\r\n","import React, { useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  requestCurrencySuccess,\n  requestCurrencyFailure,\n} from \"./redux/actions\";\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport { setInnerWidth } from \"./redux/actions\";\nimport Bought from \"./components/boughtItems/Bought\";\nimport Received from \"./components/receivedItems/Received\";\nimport NotFound from \"./components/NotFound\";\nimport NavBar from \"./components/NavBar\";\nimport { ThemeProvider } from \"styled-components\";\nimport { getTheme, GlobalStyle } from \"./styles\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\n\nconst BASE_URL =\n  \"https://api.exchangeratesapi.io/latest?base=USD&symbols=USD,ILS\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const { theme } = useSelector((state) => state);\n  const fetchCurrency = useCallback(async () => {\n    try {\n      const result = await fetch(BASE_URL);\n      const {\n        rates: { ILS: dif },\n      } = await result.json();\n      dispatch(requestCurrencySuccess(dif));\n    } catch (error) {\n      dispatch(requestCurrencyFailure(\"Currency may not be up to date\"));\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      dispatch(setInnerWidth(window.innerWidth));\n    });\n\n    fetchCurrency();\n    const currencyInterval = setInterval(fetchCurrency, 10 * 1000);\n\n    return () => {\n      clearInterval(currencyInterval);\n    };\n  }, [fetchCurrency, dispatch]);\n\n  return (\n    <HashRouter>\n      <ThemeProvider theme={() => getTheme(theme)}>\n        <GlobalStyle />\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/list\">\n            <ErrorBoundary>\n              <Bought />\n            </ErrorBoundary>\n          </Route>\n          <Route exact path=\"/received\">\n            <ErrorBoundary>\n              <Received />\n            </ErrorBoundary>\n          </Route>\n          <Route exact path=\"/\">\n            <Redirect to=\"/list\" />\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </ThemeProvider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { SET_INNER_WIDTH } from \"../actionTypes\";\r\n\r\nexport const setInnerWidth = (width) => {\r\n  return {\r\n    type: SET_INNER_WIDTH,\r\n    payload: width,\r\n  };\r\n};\r\n","import { lightTheme, darkTheme } from \"./themes\";\r\n\r\nexport const getTheme = (currentTheme) => {\r\n  switch (currentTheme) {\r\n    case \"light\":\r\n      return lightTheme;\r\n    case \"dark\":\r\n      return darkTheme;\r\n    default:\r\n      return lightTheme;\r\n  }\r\n};\r\n","import { SET_LIST } from \"../actionTypes\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nconst shoppingListMock = [\r\n  {\r\n    id: uuidv4(),\r\n    name: \"iPhone 11\",\r\n    store: \"Apple Store\",\r\n    priceInUSD: 4000,\r\n    deliveryDate: Date.now() + 4000000000,\r\n    received: false,\r\n    receivedDate: null,\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    name: \"Oneplus 8T\",\r\n    store: \"ebay\",\r\n    priceInUSD: 2000,\r\n    deliveryDate: Date.now() + 100000000,\r\n    received: false,\r\n    receivedDate: null,\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    name: \"Nintendo Switch\",\r\n    store: \"Amazon\",\r\n    priceInUSD: 800,\r\n    deliveryDate: Date.now() + 200000000,\r\n    received: false,\r\n    receivedDate: null,\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    name: \"Headphones\",\r\n    store: \"Amazon\",\r\n    priceInUSD: 750,\r\n    deliveryDate: Date.now() + 300000000,\r\n    received: false,\r\n    receivedDate: null,\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    name: \"Samsung Galaxy Note 10\",\r\n    store: \"Amazon\",\r\n    priceInUSD: 2500,\r\n    deliveryDate: Date.now() + 400000000,\r\n    received: false,\r\n    receivedDate: null,\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    name: \"Sony xm-1000\",\r\n    store: \"Ali Express\",\r\n    priceInUSD: 750,\r\n    deliveryDate: Date.now() + 500000000,\r\n    received: true,\r\n    receivedDate: Date.now() - 500000000,\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    name: \"Chair\",\r\n    store: \"Ikea\",\r\n    priceInUSD: 2200,\r\n    deliveryDate: Date.now() + 600000000,\r\n    received: true,\r\n    receivedDate: Date.now() - 600000000,\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    name: \"Banana\",\r\n    store: \"Ali Express\",\r\n    priceInUSD: 10,\r\n    deliveryDate: Date.now() + 700000000,\r\n    received: true,\r\n    receivedDate: Date.now() - 700000000,\r\n  },\r\n];\r\n\r\nconst shoppingListState = shoppingListMock;\r\n\r\nexport default function shoppingListReducer(state = shoppingListState, action) {\r\n  switch (action.type) {\r\n    case SET_LIST:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  TOGGLE_CURRENCY,\r\n  REQUEST_CURRENCY_SUCCESS,\r\n  REQUEST_CURRENCY_FAILURE,\r\n} from \"../actionTypes\";\r\n\r\nconst currencyState = {\r\n  current: \"ILS\",\r\n  dif: 3.3,\r\n  error: \"\",\r\n};\r\n\r\nconst previousCurrency = localStorage.getItem(\"currency\");\r\nif (previousCurrency) {\r\n  currencyState.current = previousCurrency;\r\n}\r\n\r\nexport default function currencyReducer(state = currencyState, action) {\r\n  switch (action.type) {\r\n    case TOGGLE_CURRENCY:\r\n      localStorage.setItem(\"currency\", state.current === \"ILS\" ? \"USD\" : \"ILS\");\r\n      return {\r\n        ...state,\r\n        current: state.current === \"ILS\" ? \"USD\" : \"ILS\",\r\n      };\r\n    case REQUEST_CURRENCY_SUCCESS:\r\n      return { ...state, error: \"\", dif: action.payload };\r\n    case REQUEST_CURRENCY_FAILURE:\r\n      return { ...state, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_THEME } from \"../actionTypes\";\r\n\r\nlet themeState = \"light\";\r\n\r\nconst previousTheme = localStorage.getItem(\"theme\");\r\nif (previousTheme) {\r\n  themeState = previousTheme;\r\n} else {\r\n  if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\r\n    // Check default theme of the user\r\n    themeState = \"dark\";\r\n  }\r\n}\r\n\r\nexport default function innerWidthReducer(state = themeState, action) {\r\n  switch (action.type) {\r\n    case SET_THEME:\r\n      localStorage.setItem(\"theme\", action.payload);\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport shoppingListReducer from \"./shoppingListReducer\";\r\nimport currencyReducer from \"./currencyReducer\";\r\nimport innerWidthReducer from \"./innerWidthReducer\";\r\nimport themeReducer from \"./themeReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  shoppingList: shoppingListReducer,\r\n  currency: currencyReducer,\r\n  innerWidth: innerWidthReducer,\r\n  theme: themeReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { SET_INNER_WIDTH } from \"../actionTypes\";\r\n\r\nconst innerWidthState = 1000;\r\n\r\nexport default function innerWidthReducer(state = innerWidthState, action) {\r\n  switch (action.type) {\r\n    case SET_INNER_WIDTH:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport reducer from \"./reducers/rootReducer\";\r\nimport ReduxThunk from \"redux-thunk\";\r\n\r\nconst store = createStore(reducer, applyMiddleware(ReduxThunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}